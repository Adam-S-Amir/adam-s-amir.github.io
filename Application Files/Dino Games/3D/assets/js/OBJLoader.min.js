/**
 * Minified by jsDelivr using Terser v5.3.5.
 * Original file: /npm/three@0.122.0/examples/js/loaders/OBJLoader.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
THREE.OBJLoader=function(){var e=/^[og]\s*(.+)?/,t=/^mtllib /,r=/^usemtl /,i=/^usemap /,s=new THREE.Vector3,a=new THREE.Vector3,o=new THREE.Vector3,n=new THREE.Vector3,l=new THREE.Vector3;function h(){var e={objects:[],object:{},vertices:[],normals:[],colors:[],uvs:[],materials:{},materialLibraries:[],startObject:function(e,t){if(this.object&&!1===this.object.fromDeclaration)return this.object.name=e,void(this.object.fromDeclaration=!1!==t);var r=this.object&&"function"==typeof this.object.currentMaterial?this.object.currentMaterial():void 0;if(this.object&&"function"==typeof this.object._finalize&&this.object._finalize(!0),this.object={name:e||"",fromDeclaration:!1!==t,geometry:{vertices:[],normals:[],colors:[],uvs:[],hasUVIndices:!1},materials:[],smooth:!0,startMaterial:function(e,t){var r=this._finalize(!1);r&&(r.inherited||r.groupCount<=0)&&this.materials.splice(r.index,1);var i={index:this.materials.length,name:e||"",mtllib:Array.isArray(t)&&t.length>0?t[t.length-1]:"",smooth:void 0!==r?r.smooth:this.smooth,groupStart:void 0!==r?r.groupEnd:0,groupEnd:-1,groupCount:-1,inherited:!1,clone:function(e){var t={index:"number"==typeof e?e:this.index,name:this.name,mtllib:this.mtllib,smooth:this.smooth,groupStart:0,groupEnd:-1,groupCount:-1,inherited:!1};return t.clone=this.clone.bind(t),t}};return this.materials.push(i),i},currentMaterial:function(){if(this.materials.length>0)return this.materials[this.materials.length-1]},_finalize:function(e){var t=this.currentMaterial();if(t&&-1===t.groupEnd&&(t.groupEnd=this.geometry.vertices.length/3,t.groupCount=t.groupEnd-t.groupStart,t.inherited=!1),e&&this.materials.length>1)for(var r=this.materials.length-1;r>=0;r--)this.materials[r].groupCount<=0&&this.materials.splice(r,1);return e&&0===this.materials.length&&this.materials.push({name:"",smooth:this.smooth}),t}},r&&r.name&&"function"==typeof r.clone){var i=r.clone(0);i.inherited=!0,this.object.materials.push(i)}this.objects.push(this.object)},finalize:function(){this.object&&"function"==typeof this.object._finalize&&this.object._finalize(!0)},parseVertexIndex:function(e,t){var r=parseInt(e,10);return 3*(r>=0?r-1:r+t/3)},parseNormalIndex:function(e,t){var r=parseInt(e,10);return 3*(r>=0?r-1:r+t/3)},parseUVIndex:function(e,t){var r=parseInt(e,10);return 2*(r>=0?r-1:r+t/2)},addVertex:function(e,t,r){var i=this.vertices,s=this.object.geometry.vertices;s.push(i[e+0],i[e+1],i[e+2]),s.push(i[t+0],i[t+1],i[t+2]),s.push(i[r+0],i[r+1],i[r+2])},addVertexPoint:function(e){var t=this.vertices;this.object.geometry.vertices.push(t[e+0],t[e+1],t[e+2])},addVertexLine:function(e){var t=this.vertices;this.object.geometry.vertices.push(t[e+0],t[e+1],t[e+2])},addNormal:function(e,t,r){var i=this.normals,s=this.object.geometry.normals;s.push(i[e+0],i[e+1],i[e+2]),s.push(i[t+0],i[t+1],i[t+2]),s.push(i[r+0],i[r+1],i[r+2])},addFaceNormal:function(e,t,r){var i=this.vertices,h=this.object.geometry.normals;s.fromArray(i,e),a.fromArray(i,t),o.fromArray(i,r),l.subVectors(o,a),n.subVectors(s,a),l.cross(n),l.normalize(),h.push(l.x,l.y,l.z),h.push(l.x,l.y,l.z),h.push(l.x,l.y,l.z)},addColor:function(e,t,r){var i=this.colors,s=this.object.geometry.colors;void 0!==i[e]&&s.push(i[e+0],i[e+1],i[e+2]),void 0!==i[t]&&s.push(i[t+0],i[t+1],i[t+2]),void 0!==i[r]&&s.push(i[r+0],i[r+1],i[r+2])},addUV:function(e,t,r){var i=this.uvs,s=this.object.geometry.uvs;s.push(i[e+0],i[e+1]),s.push(i[t+0],i[t+1]),s.push(i[r+0],i[r+1])},addDefaultUV:function(){var e=this.object.geometry.uvs;e.push(0,0),e.push(0,0),e.push(0,0)},addUVLine:function(e){var t=this.uvs;this.object.geometry.uvs.push(t[e+0],t[e+1])},addFace:function(e,t,r,i,s,a,o,n,l){var h=this.vertices.length,c=this.parseVertexIndex(e,h),u=this.parseVertexIndex(t,h),p=this.parseVertexIndex(r,h);if(this.addVertex(c,u,p),this.addColor(c,u,p),void 0!==o&&""!==o){var m=this.normals.length;c=this.parseNormalIndex(o,m),u=this.parseNormalIndex(n,m),p=this.parseNormalIndex(l,m),this.addNormal(c,u,p)}else this.addFaceNormal(c,u,p);if(void 0!==i&&""!==i){var d=this.uvs.length;c=this.parseUVIndex(i,d),u=this.parseUVIndex(s,d),p=this.parseUVIndex(a,d),this.addUV(c,u,p),this.object.geometry.hasUVIndices=!0}else this.addDefaultUV()},addPointGeometry:function(e){this.object.geometry.type="Points";for(var t=this.vertices.length,r=0,i=e.length;r<i;r++)this.addVertexPoint(this.parseVertexIndex(e[r],t))},addLineGeometry:function(e,t){this.object.geometry.type="Line";for(var r=this.vertices.length,i=this.uvs.length,s=0,a=e.length;s<a;s++)this.addVertexLine(this.parseVertexIndex(e[s],r));var o=0;for(a=t.length;o<a;o++)this.addUVLine(this.parseUVIndex(t[o],i))}};return e.startObject("",!1),e}function c(e){THREE.Loader.call(this,e),this.materials=null}return c.prototype=Object.assign(Object.create(THREE.Loader.prototype),{constructor:c,load:function(e,t,r,i){var s=this,a=new THREE.FileLoader(this.manager);a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(e,(function(r){try{t(s.parse(r))}catch(t){i?i(t):console.error(t),s.manager.itemError(e)}}),r,i)},setMaterials:function(e){return this.materials=e,this},parse:function(s){var a=new h;-1!==s.indexOf("\r\n")&&(s=s.replace(/\r\n/g,"\n")),-1!==s.indexOf("\\\n")&&(s=s.replace(/\\\n/g,""));for(var o=s.split("\n"),n="",l="",c=[],u="function"==typeof"".trimLeft,p=0,m=o.length;p<m;p++)if(n=o[p],0!==(n=u?n.trimLeft():n.trim()).length&&"#"!==(l=n.charAt(0)))if("v"===l){var d=n.split(/\s+/);switch(d[0]){case"v":a.vertices.push(parseFloat(d[1]),parseFloat(d[2]),parseFloat(d[3])),d.length>=7?a.colors.push(parseFloat(d[4]),parseFloat(d[5]),parseFloat(d[6])):a.colors.push(void 0,void 0,void 0);break;case"vn":a.normals.push(parseFloat(d[1]),parseFloat(d[2]),parseFloat(d[3]));break;case"vt":a.uvs.push(parseFloat(d[1]),parseFloat(d[2]))}}else if("f"===l){for(var f=n.substr(1).trim().split(/\s+/),v=[],g=0,b=f.length;g<b;g++){var E=f[g];if(E.length>0){var y=E.split("/");v.push(y)}}var j=v[0];for(g=1,b=v.length-1;g<b;g++){var x=v[g],H=v[g+1];a.addFace(j[0],x[0],H[0],j[1],x[1],H[1],j[2],x[2],H[2])}}else if("l"===l){var R=n.substring(1).trim().split(" "),T=[],V=[];if(-1===n.indexOf("/"))T=R;else for(var w=0,L=R.length;w<L;w++){var I=R[w].split("/");""!==I[0]&&T.push(I[0]),""!==I[1]&&V.push(I[1])}a.addLineGeometry(T,V)}else if("p"===l){var M=n.substr(1).trim().split(" ");a.addPointGeometry(M)}else if(null!==(c=e.exec(n))){var F=(" "+c[0].substr(1).trim()).substr(1);a.startObject(F)}else if(r.test(n))a.object.startMaterial(n.substring(7).trim(),a.materialLibraries);else if(t.test(n))a.materialLibraries.push(n.substring(7).trim());else if(i.test(n))console.warn('THREE.OBJLoader: Rendering identifier "usemap" not supported. Textures must be defined in MTL files.');else if("s"===l){if((c=n.split(" ")).length>1){var z=c[1].trim().toLowerCase();a.object.smooth="0"!==z&&"off"!==z}else a.object.smooth=!0;(q=a.object.currentMaterial())&&(q.smooth=a.object.smooth)}else{if("\0"===n)continue;console.warn('THREE.OBJLoader: Unexpected line: "'+n+'"')}a.finalize();var A=new THREE.Group;A.materialLibraries=[].concat(a.materialLibraries);for(p=0,m=a.objects.length;p<m;p++){var U=a.objects[p],P=U.geometry,C=U.materials,B="Line"===P.type,O="Points"===P.type,N=!1;if(0!==P.vertices.length){var _=new THREE.BufferGeometry;_.setAttribute("position",new THREE.Float32BufferAttribute(P.vertices,3)),_.setAttribute("normal",new THREE.Float32BufferAttribute(P.normals,3)),P.colors.length>0&&(N=!0,_.setAttribute("color",new THREE.Float32BufferAttribute(P.colors,3))),!0===P.hasUVIndices&&_.setAttribute("uv",new THREE.Float32BufferAttribute(P.uvs,2));for(var G,S=[],D=0,J=C.length;D<J;D++){var k=(Q=C[D]).name+"_"+Q.smooth+"_"+N,q=a.materials[k];if(null!==this.materials)if(q=this.materials.create(Q.name),!B||!q||q instanceof THREE.LineBasicMaterial){if(O&&q&&!(q instanceof THREE.PointsMaterial)){var W=new THREE.PointsMaterial({size:10,sizeAttenuation:!1});THREE.Material.prototype.copy.call(W,q),W.color.copy(q.color),W.map=q.map,q=W}}else{var K=new THREE.LineBasicMaterial;THREE.Material.prototype.copy.call(K,q),K.color.copy(q.color),q=K}void 0===q&&((q=B?new THREE.LineBasicMaterial:O?new THREE.PointsMaterial({size:1,sizeAttenuation:!1}):new THREE.MeshPhongMaterial).name=Q.name,q.flatShading=!Q.smooth,q.vertexColors=N,a.materials[k]=q),S.push(q)}if(S.length>1){for(D=0,J=C.length;D<J;D++){var Q=C[D];_.addGroup(Q.groupStart,Q.groupCount,D)}G=B?new THREE.LineSegments(_,S):O?new THREE.Points(_,S):new THREE.Mesh(_,S)}else G=B?new THREE.LineSegments(_,S[0]):O?new THREE.Points(_,S[0]):new THREE.Mesh(_,S[0]);G.name=U.name,A.add(G)}}return A}}),c}();
//# sourceMappingURL=/sm/e1014b14e6647ad41d105f447e31a0cdfb042ba2216a9ee301a25637b6353072.map