/**
 * Minified by jsDelivr using Terser v5.3.5.
 * Original file: /npm/three@0.122.0/src/helpers/CameraHelper.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import{Camera}from"../cameras/Camera.js";import{Vector3}from"../math/Vector3.js";import{LineSegments}from"../objects/LineSegments.js";import{Color}from"../math/Color.js";import{LineBasicMaterial}from"../materials/LineBasicMaterial.js";import{BufferGeometry}from"../core/BufferGeometry.js";import{Float32BufferAttribute}from"../core/BufferAttribute.js";const _vector=new Vector3,_camera=new Camera;class CameraHelper extends LineSegments{constructor(t){const e=new BufferGeometry,r=new LineBasicMaterial({color:16777215,vertexColors:!0,toneMapped:!1}),o=[],a=[],n={},i=new Color(16755200),c=new Color(16711680),s=new Color(43775),m=new Color(16777215),f=new Color(3355443);function p(t,e,r){u(t,r),u(e,r)}function u(t,e){o.push(0,0,0),a.push(e.r,e.g,e.b),void 0===n[t]&&(n[t]=[]),n[t].push(o.length/3-1)}p("n1","n2",i),p("n2","n4",i),p("n4","n3",i),p("n3","n1",i),p("f1","f2",i),p("f2","f4",i),p("f4","f3",i),p("f3","f1",i),p("n1","f1",i),p("n2","f2",i),p("n3","f3",i),p("n4","f4",i),p("p","n1",c),p("p","n2",c),p("p","n3",c),p("p","n4",c),p("u1","u2",s),p("u2","u3",s),p("u3","u1",s),p("c","t",m),p("p","c",f),p("cn1","cn2",f),p("cn3","cn4",f),p("cf1","cf2",f),p("cf3","cf4",f),e.setAttribute("position",new Float32BufferAttribute(o,3)),e.setAttribute("color",new Float32BufferAttribute(a,3)),super(e,r),this.type="CameraHelper",this.camera=t,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=n,this.update()}update(){const t=this.geometry,e=this.pointMap;_camera.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),setPoint("c",e,t,_camera,0,0,-1),setPoint("t",e,t,_camera,0,0,1),setPoint("n1",e,t,_camera,-1,-1,-1),setPoint("n2",e,t,_camera,1,-1,-1),setPoint("n3",e,t,_camera,-1,1,-1),setPoint("n4",e,t,_camera,1,1,-1),setPoint("f1",e,t,_camera,-1,-1,1),setPoint("f2",e,t,_camera,1,-1,1),setPoint("f3",e,t,_camera,-1,1,1),setPoint("f4",e,t,_camera,1,1,1),setPoint("u1",e,t,_camera,.7,1.1,-1),setPoint("u2",e,t,_camera,-.7,1.1,-1),setPoint("u3",e,t,_camera,0,2,-1),setPoint("cf1",e,t,_camera,-1,0,1),setPoint("cf2",e,t,_camera,1,0,1),setPoint("cf3",e,t,_camera,0,-1,1),setPoint("cf4",e,t,_camera,0,1,1),setPoint("cn1",e,t,_camera,-1,0,-1),setPoint("cn2",e,t,_camera,1,0,-1),setPoint("cn3",e,t,_camera,0,-1,-1),setPoint("cn4",e,t,_camera,0,1,-1),t.getAttribute("position").needsUpdate=!0}}function setPoint(t,e,r,o,a,n,i){_vector.set(a,n,i).unproject(o);const c=e[t];if(void 0!==c){const t=r.getAttribute("position");for(let e=0,r=c.length;e<r;e++)t.setXYZ(c[e],_vector.x,_vector.y,_vector.z)}}export{CameraHelper};
//# sourceMappingURL=/sm/8e5c730710851d517ea84f0347c7156bbc8df09111a9546d91b64ef715a8012f.map