/**
 * Minified by jsDelivr using Terser v5.3.5.
 * Original file: /npm/three@0.122.0/examples/js/shaders/ConvolutionShader.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
THREE.ConvolutionShader={defines:{KERNEL_SIZE_FLOAT:"25.0",KERNEL_SIZE_INT:"25"},uniforms:{tDiffuse:{value:null},uImageIncrement:{value:new THREE.Vector2(.001953125,0)},cKernel:{value:[]}},vertexShader:["uniform vec2 uImageIncrement;","varying vec2 vUv;","void main() {","\tvUv = uv - ( ( KERNEL_SIZE_FLOAT - 1.0 ) / 2.0 ) * uImageIncrement;","\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform float cKernel[ KERNEL_SIZE_INT ];","uniform sampler2D tDiffuse;","uniform vec2 uImageIncrement;","varying vec2 vUv;","void main() {","\tvec2 imageCoord = vUv;","\tvec4 sum = vec4( 0.0, 0.0, 0.0, 0.0 );","\tfor( int i = 0; i < KERNEL_SIZE_INT; i ++ ) {","\t\tsum += texture2D( tDiffuse, imageCoord ) * cKernel[ i ];","\t\timageCoord += uImageIncrement;","\t}","\tgl_FragColor = sum;","}"].join("\n"),buildKernel:function(e){function n(e,n){return Math.exp(-e*e/(2*n*n))}var r,i,t,o,a=2*Math.ceil(3*e)+1;for(a>25&&(a=25),o=.5*(a-1),i=new Array(a),t=0,r=0;r<a;++r)i[r]=n(r-o,e),t+=i[r];for(r=0;r<a;++r)i[r]/=t;return i}};
//# sourceMappingURL=/sm/ff82821a0cd82e257eee80f39f801de2f0ba1ca122d7f830f6852712268f7b54.map